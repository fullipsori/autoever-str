<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.maineventflow.AutoVDMSFlow"/>
        </type-metadata>
        <memory-model-settings/>
        <implements module-reference="com.autoever.poc.maineventflow.DataParser"/>
        <implements module-reference="com.autoever.poc.maineventflow.HttpClientSchema"/>
        <implements module-reference="com.autoever.poc.maineventflow.LiveViewTable"/>
        <implements module-reference="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <import from="com.autoever.poc.maineventflow.HttpClientSchema"/>
        <import from="com.autoever.poc.maineventflow.LiveViewTable"/>
        <import from="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <dynamic-variables/>
        <table-schemas>
            <table-schema name="DTCTable">
                <schema>
                    <field name="dtc_code" type="string"/>
                    <field name="description" type="string"/>
                </schema>
                <primary-index type="btree">
                    <field name="dtc_code"/>
                </primary-index>
            </table-schema>
            <table-schema name="MGMTTable">
                <schema>
                    <field name="VEHICLE_NO" type="string"/>
                    <field name="VCLE_KEYID" type="long"/>
                    <field name="VIN" type="string"/>
                    <field name="TERMINAL_ID" type="string"/>
                </schema>
                <primary-index type="btree">
                    <field name="VCLE_KEYID"/>
                </primary-index>
            </table-schema>
        </table-schemas>
        <data name="MGMTQueryTable" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="heap"/>
            <param name="replicated" value="false"/>
            <param name="table-schema" value="MGMTTable"/>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <data name="QueryTable" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="heap"/>
            <param name="replicated" value="false"/>
            <param name="table-schema" value="DTCTable"/>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <stream name="FullControl" schema="HttpClientControlSchema"/>
        <stream name="KafkaConsumerControl">
            <schema>
                <parent-schemas>
                    <parent-schema name="KafkaConsumerFullControlSchema"/>
                </parent-schemas>
                <field name="FetchFromDateTime" type="timestamp"/>
            </schema>
        </stream>
        <stream name="PolicyInputStream">
            <schema>
                <field name="command" type="string"/>
                <field name="policyFolder" type="string"/>
            </schema>
        </stream>
        <box name="Start" type="inputadapter">
            <output port="1" stream="out:Start_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="CreateTime" type="map">
            <input port="1" stream="KafkaConsumerControl"/>
            <output port="1" stream="out:CreateTime_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <replace field="time">if (notnull(FetchFromDateTime)) then long(get_millisecond(FetchFromDateTime)) else time</replace>
                </expressions>
            </target-list>
        </box>
        <box name="PolicyInputLog" type="outputadapter">
            <input port="1" stream="PolicyInputStream"/>
            <output port="1" stream="out:PolicyInputLog_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Info"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value=""/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Use EventFlow Name"/>
            <param name="messagePrefix" value=""/>
            <param name="moduleQualifiedEventFlowName" value="false"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="false"/>
        </box>
        <box name="SetDT" type="map">
            <input port="1" stream="out:Start_1"/>
            <output port="1" stream="out:SetDT_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="FileName">getResourceAbsolutePath('data') + "/DTC_MASTER.txt"</include>
                </expressions>
            </target-list>
        </box>
        <box name="LoadDT" type="inputadapter">
            <input port="1" stream="out:SetDT_1"/>
            <output port="1" stream="out:LoadDT_1"/>
            <output port="2" stream="out:LoadDT_2"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.csvreader.CSVReader"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="Charset" value=""/>
            <param name="Delimiter" value=","/>
            <param name="DiscardEmptyRecords" value="true"/>
            <param name="EmitTiming" value="Periodic"/>
            <param name="FileName" value=""/>
            <param name="HeaderTypeOption" value="No header"/>
            <param name="MapControlPort" value="false"/>
            <param name="NullString" value="null"/>
            <param name="Period" value="0"/>
            <param name="PreserveWhitespace" value="false"/>
            <param name="QuoteChar" value=""/>
            <param name="Repeat" value="1"/>
            <param name="Schema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;dtc_code&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;description&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="StartControlPort" value="true"/>
            <param name="StartEventPort" value="true"/>
            <param name="TimeBasedEmitField" value=""/>
            <param name="TimeBasedEmitMode" value="Emission times relative to the first record"/>
            <param name="TimestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="UseDefaultCharset" value="true"/>
            <param name="ignoreExistingRecords" value="true"/>
            <param name="incompleteRecordsMode" value="Populate with nulls"/>
            <param name="lenientTimestampParsing" value="true"/>
            <param name="logLevel" value="INFO"/>
            <param name="logWarningForIncomplete" value="false"/>
            <param name="readAsResource" value="true"/>
            <param name="tailMode" value="false"/>
            <param name="tailUpdateInterval" value="1000"/>
        </box>
        <box name="EmitOnClose" type="aggregate">
            <input port="1" stream="out:LoadDT_2"/>
            <output port="1" stream="out:EmitOnClose_1"/>
            <param name="dimension-name.0" value="LoadDTCFile"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="input1.Type=='Open'"/>
            <param name="dimension-close-predicate.0" value="input1.Type=='Close'"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="*">lastval(*)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Query" type="query">
            <input port="1" stream="out:LoadDT_1"/>
            <dataref id="querytable" name="QueryTable"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="dtc_code"/>
            <param name="key-value.0" value="input1.dtc_code"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="description">description</set>
                </expressions>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="SetMGMT" type="map">
            <input port="1" stream="out:EmitOnClose_1"/>
            <output port="1" stream="out:SetMGMT_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="FileName">getResourceAbsolutePath('data') + "/VDMS_car_mgmtNO.txt"</include>
                </expressions>
            </target-list>
        </box>
        <box name="LoadMGMT" type="inputadapter">
            <input port="1" stream="out:SetMGMT_1"/>
            <output port="1" stream="out:LoadMGMT_1"/>
            <output port="2" stream="out:LoadMGMT_2"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.csvreader.CSVReader"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="Charset" value=""/>
            <param name="Delimiter" value="\t"/>
            <param name="DiscardEmptyRecords" value="true"/>
            <param name="EmitTiming" value="Periodic"/>
            <param name="FileName" value=""/>
            <param name="HeaderTypeOption" value="Ignore header"/>
            <param name="MapControlPort" value="false"/>
            <param name="NullString" value="null"/>
            <param name="Period" value="0"/>
            <param name="PreserveWhitespace" value="false"/>
            <param name="QuoteChar" value=""/>
            <param name="Repeat" value="1"/>
            <param name="Schema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;mgmtNO&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;vcle_KeyID&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field name=&quot;vin&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;terminal_ID&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="StartControlPort" value="true"/>
            <param name="StartEventPort" value="true"/>
            <param name="TimeBasedEmitField" value=""/>
            <param name="TimeBasedEmitMode" value="Emission times relative to the first record"/>
            <param name="TimestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="UseDefaultCharset" value="true"/>
            <param name="ignoreExistingRecords" value="true"/>
            <param name="incompleteRecordsMode" value="Populate with nulls"/>
            <param name="lenientTimestampParsing" value="true"/>
            <param name="logLevel" value="INFO"/>
            <param name="logWarningForIncomplete" value="false"/>
            <param name="readAsResource" value="true"/>
            <param name="tailMode" value="false"/>
            <param name="tailUpdateInterval" value="1000"/>
        </box>
        <box name="EmitOnCloseCopy" type="aggregate">
            <input port="1" stream="out:LoadMGMT_2"/>
            <output port="1" stream="out:EmitOnCloseCopy_1"/>
            <param name="dimension-name.0" value="LoadDTCFile"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="input1.Type=='Open'"/>
            <param name="dimension-close-predicate.0" value="input1.Type=='Close'"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="*">lastval(*)</include>
                </expressions>
            </target-list>
        </box>
        <box name="QueryCopy" type="query">
            <input port="1" stream="out:LoadMGMT_1"/>
            <dataref id="querytable" name="MGMTQueryTable"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="VCLE_KEYID"/>
            <param name="key-value.0" value="input1.vcle_KeyID"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="VEHICLE_NO">input1.mgmtNO</set>
                </expressions>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="subscribeToKafka" type="map">
            <input port="1" stream="out:EmitOnCloseCopy_1"/>
            <output port="1" stream="out:subscribeToKafka_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="command">"subscribe"</include>
                    <include field="topic">"AutoSubmitReq"</include>
                </expressions>
            </target-list>
        </box>
        <box name="DefaultValues" type="map">
            <input port="1" stream="out:subscribeToKafka_1"/>
            <output port="1" stream="out:DefaultValues_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <replace field="command">coalesce(input1.command, 'subscribe')</replace>
                    <replace field="topic">coalesce(input.topic, 'AutoSubmitReq')</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Union2" type="union">
            <input port="1" stream="out:CreateTime_1"/>
            <input port="2" stream="out:DefaultValues_1"/>
            <output port="1" stream="out:Union2_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="DefaultGroup" type="map">
            <input port="1" stream="out:Union2_1"/>
            <output port="1" stream="out:DefaultGroup_1"/>
            <target-list>
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="InputAdapter" type="inputadapter">
            <input port="1" stream="out:DefaultGroup_1"/>
            <output port="1" stream="out:InputAdapter_1"/>
            <output port="2" stream="KafkaStatus"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.kafka.KafkaConsumer"/>
            <param name="AdvancedConfig-col0.0" value="auto.offset.reset"/>
            <param name="AdvancedConfig-col0.1" value="group.id"/>
            <param name="AdvancedConfig-col1.0" value="latest"/>
            <param name="AdvancedConfig-col1.1" value="input.groupId"/>
            <param name="EnableMetricsPort" value="false"/>
            <param name="EnableStatusPort" value="true"/>
            <param name="brokers" value="${KAFKA_BROKER}"/>
            <param name="characterSet" value="UTF-8"/>
            <param name="deserializerType" value="String"/>
            <param name="enableCommandPort" value="true"/>
            <param name="enablePassThroughFields" value="false"/>
            <param name="keyDeserializerType" value="String"/>
            <param name="keyOutputSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field description=&quot;단말기 시리얼 번호&quot; name=&quot;SerialNo&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;SequenceNo&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;Body 크기&quot; name=&quot;BodyLength&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;차종&quot; name=&quot;CIN&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;차량식별번호&quot; name=&quot;VIN&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;차량 키 아이디&quot; name=&quot;VehicleKeyID&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;데이터 수집 정책 버전&quot; name=&quot;PolicyVersion&quot; type=&quot;int&quot;/&gt;&#13;&#10;    &lt;field description=&quot;데이터 건수&quot; name=&quot;RecordCount&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;트립 번호&quot; name=&quot;RootCount&quot; type=&quot;int&quot;/&gt;&#13;&#10;    &lt;field description=&quot;트립 안에서의 데이터 순서&quot; name=&quot;BodySequenceNo&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;단말기 시리얼 번호&quot; name=&quot;BodySerialNo&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;데이터 수집 시작 시간&quot; name=&quot;BaseTime&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;수집 데이터의 종류&quot; name=&quot;MessageType&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;데이터 길이&quot; name=&quot;DataLength&quot; type=&quot;int&quot;/&gt;&#13;&#10;    &lt;field description=&quot;Time Stamp&quot; name=&quot;DeltaTime&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field name=&quot;DataFlag&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;수집 채널 번호&quot; name=&quot;DataChannel&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field description=&quot;CAN ID&quot; name=&quot;DataID&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field description=&quot;데이터&quot; name=&quot;Data&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="logLevel" value="INFO"/>
            <param name="maxFailureCount" value="5"/>
            <param name="outputBeginningOffsetStatusMessage" value="false"/>
            <param name="outputHighWaterMark" value="false"/>
            <param name="outputLatestOffsetStatusMessage" value="false"/>
            <param name="outputSchema" value="KafkaVDMSDataSchema"/>
            <param name="performCommit" value="false"/>
            <param name="pollWaitMS" value="100"/>
            <param name="useDefaultcharacterSet" value="true"/>
            <param name="userDeserializerClass" value="com.autoever.poc.adapters.KafkaDeserializer"/>
            <param name="userKeyDeserializerClass" value=""/>
        </box>
        <output-stream name="KafkaStatus"/>
        <box name="NotNull" type="filter">
            <input port="1" stream="out:InputAdapter_1"/>
            <output port="1" stream="out:NotNull_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="!isnull(message)"/>
        </box>
        <box name="Filter" type="filter">
            <input port="1" stream="out:NotNull_1"/>
            <output port="1" stream="out:Filter_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="true"/>
        </box>
        <box name="InitializeData" type="map">
            <input port="1" stream="out:Filter_1"/>
            <output port="1" stream="out:InitializeData_1"/>
            <target-list>
                <item name="input" selection="none">
                    <declare field="messageID">message.VehicleKeyID + '_' + strftime("%Y%m%d%H%M%S%f", now())</declare>
                    <include field="message"/>
                </item>
                <expressions>
                    <include field="perfData">tuple(messageID AS kafka_msg_id, to_milliseconds(now()) AS start_time, 0L AS t1_time, 0L AS t2_time, 0L AS t3_time, 0L AS t4_time, 0L AS t5_time, 0L AS end_time, 0L AS elapsed, 0 AS data_count, message.RecordCount AS msg_count)</include>
                    <include field="messageID">messageID</include>
                </expressions>
            </target-list>
        </box>
        <box name="Query2Mgmt" type="query">
            <input port="1" stream="out:InitializeData_1"/>
            <output port="1" stream="out:Query2Mgmt_1"/>
            <dataref id="querytable" name="MGMTQueryTable"/>
            <param name="operation" value="read"/>
            <param name="where" value="primary-key"/>
            <param name="limit" value="1"/>
            <param name="key-field.0" value="VCLE_KEYID"/>
            <param name="key-lowerbound-value.0" value="message.VehicleKeyID"/>
            <param name="key-lowerbound-operation.0" value="eq"/>
            <param name="key-upperbound-operation.0" value="none"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="all"/>
                <item name="current" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
                <expressions>
                    <include field="mgntNO">coalesce(current.VEHICLE_NO, 'unknown')</include>
                </expressions>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="CheckMgmtNO" type="filter">
            <input port="1" stream="out:Query2Mgmt_1"/>
            <output port="1" stream="out:CheckMgmtNO_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="mgntNO != &quot;unknown&quot;"/>
        </box>
        <box name="RunMode" type="filter">
            <input port="1" stream="out:CheckMgmtNO_1"/>
            <output port="1" stream="out:RunMode_1"/>
            <output port="2" stream="UnsupportedMode"/>
            <output port="3" stream="out:RunMode_3"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="&quot;${OP_MODE}&quot;==&quot;user&quot;"/>
            <param name="expression.1" value="&quot;${OP_MODE}&quot;==&quot;eng&quot;"/>
            <param name="expression.2" value="&quot;${OP_MODE}&quot;==&quot;local&quot;"/>
        </box>
        <output-stream name="UnsupportedMode"/>
        <box name="AddUrl" type="map">
            <input port="1" stream="out:RunMode_1"/>
            <output port="1" stream="out:AddUrl_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="url">GetAWSUrl(message.BaseTime, message.VehicleKeyID,trim(message.MsgSrcKeyID)+'.data')</include>
                    <include field="filePath">''</include>
                    <include field="headers">list(tuple('Authorization' AS name, list('HCP MTE3OTY1OA==:2dd45bb153db94699c7b6a7b495f940f') AS values))</include>
                    <include field="settings">tuple('file download' AS requestType)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Map" type="map">
            <input port="1" stream="out:RunMode_3"/>
            <output port="1" stream="out:Map_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="kafkaMessage">input1.message</include>
                    <include field="filePath">if input1.message.MessageType == 6 then "d:/Projects/autoever/vdms/eventflow/workspace/MainEventFlow/src/main/resources/GPS.data" else "d:/Projects/autoever/vdms/eventflow/workspace/MainEventFlow/src/main/resources/DIAG.data"</include>
                </expressions>
            </target-list>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="FullControl"/>
            <input port="2" stream="out:AddUrl_1"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="InputAdapterCopy" type="inputadapter">
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="out:InputAdapterCopy_1"/>
            <output port="2" stream="Status"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.httpclient.HTTPClient"/>
            <param name="Charset" value=""/>
            <param name="LogLevel" value="INFO"/>
            <param name="ProxyHost" value=""/>
            <param name="ProxyPass" value=""/>
            <param name="ProxyPort" value="8080"/>
            <param name="ProxyUser" value=""/>
            <param name="UseDefaultCharset" value="true"/>
            <param name="UseProxy" value="false"/>
            <param name="asynchronous" value="false"/>
            <param name="authPassword" value=""/>
            <param name="authType" value="None"/>
            <param name="authUsername" value=""/>
            <param name="connectTimeout" value="30000"/>
            <param name="downloadPath" value=""/>
            <param name="excutorThreads" value="3"/>
            <param name="ignoreCertificateErrors" value="true"/>
            <param name="outputBlankLines" value="true"/>
            <param name="outputConnectingStatus" value="true"/>
            <param name="outputCookies" value="true"/>
            <param name="outputHeaders" value="true"/>
            <param name="outputInputTuple" value="true"/>
            <param name="outputNullTupleOnCompletion" value="true"/>
            <param name="outputTuplePerLine" value="false"/>
            <param name="pollFrequency" value="0"/>
            <param name="readTimeout" value="30000"/>
            <param name="reconnectTimeout" value="3000"/>
            <param name="requestMethod" value="GET"/>
            <param name="requestType" value="Basic"/>
            <param name="url" value=""/>
            <param name="urlDecodeData" value="false"/>
            <param name="urlDecodeDataType" value="QUERY_PARAM_SPACE_ENCODED"/>
        </box>
        <output-stream name="Status"/>
        <box name="InitDataField" type="map">
            <input port="1" stream="out:InputAdapterCopy_1"/>
            <output port="1" stream="out:InitDataField_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="kafkaMessage">inputTuple.message</include>
                    <include field="filePath">inputTuple.filePath</include>
                    <include field="binaryData">binary</include>
                    <include field="perfData">inputTuple.perfData</include>
                    <replace field="perfData.t1_time">to_milliseconds(now())</replace>
                    <include field="messageID">inputTuple.messageID</include>
                    <include field="mgntNO">inputTuple.mgntNO</include>
                </expressions>
            </target-list>
        </box>
        <box name="Union3" type="union">
            <input port="1" stream="out:InitDataField_1"/>
            <input port="2" stream="out:Map_1"/>
            <output port="1" stream="out:Union3_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="Distribute" type="filter">
            <input port="1" stream="out:Union3_1"/>
            <output port="1" stream="out:Distribute_1"/>
            <output port="2" stream="out:Distribute_2"/>
            <output port="3" stream="out:Distribute_3"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="kafkaMessage.MessageType==1"/>
            <param name="expression.1" value="kafkaMessage.MessageType==4"/>
            <param name="expression.2" value="kafkaMessage.MessageType==6"/>
        </box>
        <module-reference name="CANParserModule">
            <input dispatch="broadcast" name="controlPolicy" port="1" stream="out:PolicyInputLog_1"/>
            <input dispatch="round_robin" name="InputStream" port="2" stream="out:Distribute_1"/>
            <output name="PublishCanOutput" port="1" stream="out:CANParserModule_1"/>
            <output name="CanError" port="2" stream="out:CANParserModule_2"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="2"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="10" type="concrete"/>
            <param name="file" value="com.autoever.poc.parser.CANParser"/>
        </module-reference>
        <module-reference name="DIAGParserModule">
            <input dispatch="round_robin" name="InputStream" port="1" stream="out:Distribute_2"/>
            <output name="ToMainStream" port="1" stream="out:DIAGParserModule_1"/>
            <output name="ExecError" port="2" stream="out:DIAGParserModule_2"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="2"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="10" type="concrete"/>
            <param name="file" value="com.autoever.poc.parser.DIAGParser"/>
            <input-dataref name="QueryTableCopy" table="QueryTable"/>
        </module-reference>
        <module-reference name="GPSParserModule">
            <input dispatch="round_robin" name="InputStream" port="1" stream="out:Distribute_3"/>
            <output name="ToMainStream" port="1" stream="out:GPSParserModule_1"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="2"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="10" type="concrete"/>
            <param name="file" value="com.autoever.poc.parser.GPSParser"/>
        </module-reference>
        <box name="OutputUnion" type="union">
            <input port="1" stream="out:CANParserModule_1"/>
            <input port="2" stream="out:GPSParserModule_1"/>
            <input port="3" stream="out:DIAGParserModule_1"/>
            <output port="1" stream="ParserOutputStream"/>
            <param name="strict" value="false"/>
        </box>
        <box name="UnionError" type="union">
            <input port="1" stream="out:CANParserModule_2"/>
            <input port="2" stream="out:DIAGParserModule_2"/>
            <output port="1" stream="ErrorOutputStream"/>
            <param name="strict" value="false"/>
        </box>
        <output-stream name="ErrorOutputStream"/>
        <output-stream name="ParserOutputStream"/>
    </add>
</modify>
