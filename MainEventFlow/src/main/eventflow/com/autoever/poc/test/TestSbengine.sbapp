<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.test.TestSbengine"/>
        </type-metadata>
        <memory-model-settings/>
        <dynamic-variables/>
        <stream name="InputStream">
            <schema>
                <field name="d1" type="string"/>
                <field name="d2" type="string"/>
                <field name="d3" type="int"/>
            </schema>
        </stream>
        <stream name="InputStream2">
            <schema>
                <field name="d4" type="string"/>
                <field name="d5" type="string"/>
                <field name="d6" type="int"/>
            </schema>
        </stream>
        <stream name="InputStream3">
            <schema>
                <field name="a1" type="string"/>
                <field name="a2" type="int"/>
            </schema>
        </stream>
        <stream name="InputStream4">
            <schema>
                <field name="a1" type="string"/>
                <field name="a2" type="int"/>
            </schema>
        </stream>
        <box name="Aggregate" type="aggregate">
            <input port="1" stream="InputStream"/>
            <output port="1" stream="out:Aggregate_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-close-predicate.0" value="abs(lastval(d3)-firstval(d3)) &gt; 10"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="dataSet">aggregatelist(tuple(d1,d2,d3))</include>
                </expressions>
            </target-list>
        </box>
        <box name="Merge" type="merge">
            <input port="1" stream="InputStream3"/>
            <input port="2" stream="InputStream4"/>
            <output port="1" stream="OutputStream2"/>
            <param name="order-on" value="a2"/>
        </box>
        <output-stream name="OutputStream2"/>
        <box name="Iterate" type="iterate">
            <input port="1" stream="out:Aggregate_1"/>
            <output port="1" stream="out:Iterate_1"/>
            <param name="iterate-expr" value="dataSet"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="element">each.element</include>
                </expressions>
            </target-list>
        </box>
        <box name="Map" type="map">
            <input port="1" stream="out:Iterate_1"/>
            <output port="1" stream="out:Map_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">input1.element.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="Join" type="join">
            <input port="1" stream="out:Map_1"/>
            <input port="2" stream="InputStream2"/>
            <output port="1" stream="OutputStream"/>
            <param name="predicate" value="input1.d1=input2.d4"/>
            <param name="join-by" value="values"/>
            <param name="left-window-size" value="4"/>
            <param name="right-window-size" value="4"/>
            <param name="left-order-on-field" value="d3"/>
            <param name="right-order-on-field" value="d6"/>
            <param name="expression-name.0" value="r1"/>
            <param name="expression.0" value="input1.d1"/>
            <param name="expression-name.1" value="r2"/>
            <param name="expression.1" value="input1.d2"/>
            <param name="expression-name.2" value="r3"/>
            <param name="expression.2" value="input2.d6-input1.d3"/>
            <param name="delta-mode" value="false"/>
        </box>
        <output-stream name="OutputStream"/>
    </add>
</modify>
