<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.parser.CCPParser_v3"/>
        </type-metadata>
        <memory-model-settings/>
        <import alias="MainOutputSchema" from="com.autoever.poc.maineventflow.AutoVDMSFlow_v2" item="MainOutputSchema"/>
        <import from="com.autoever.poc.maineventflow.BaseRawData"/>
        <import from="com.autoever.poc.maineventflow.LiveViewTable"/>
        <import from="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <named-schemas>
            <schema name="FieldType">
                <field name="fieldName" type="string"/>
                <field name="fieldValue" type="long"/>
            </schema>
        </named-schemas>
        <parameter-definitions>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
        </parameter-definitions>
        <dynamic-variables>
            <dynamic-variable initial-expression="0.0" name="thresholdValue" setter-expression="newThresholdValue" setter-stream="ControlStream"/>
        </dynamic-variables>
        <stream name="ControlStream">
            <schema>
                <field name="command" type="string"/>
                <field name="newThresholdValue" type="double"/>
                <field name="evtFolder" type="string"/>
            </schema>
        </stream>
        <stream name="InputStream" schema="MainOutputSchema"/>
        <box name="CCPRawParser" type="java">
            <input port="1" stream="InputStream"/>
            <output port="1" stream="out:CCPRawParser_1"/>
            <output port="2" stream="StatusOutput"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.autoever.poc.adapters.VdmsRawParser"/>
            <param name="parserType" value="CCP"/>
        </box>
        <output-stream name="StatusOutput"/>
        <box name="Organize" type="map">
            <input port="1" stream="out:CCPRawParser_1"/>
            <output port="1" stream="out:Organize_1"/>
            <target-list>
                <item name="input" selection="all">
                    <remove field="PassThroughs"/>
                </item>
                <expressions>
                    <include field="*">PassThroughs.*</include>
                    <remove field="filePath"/>
                    <remove field="binaryData"/>
                </expressions>
            </target-list>
        </box>
        <box name="FilterMarker" type="filter">
            <input port="1" stream="out:Organize_1"/>
            <output port="1" stream="out:FilterMarker_1"/>
            <output port="2" stream="out:FilterMarker_2"/>
            <output port="3" stream="out:FilterMarker_3"/>
            <param name="autogen-nomatch-port" value="true"/>
            <param name="expression.0" value="IsStarted"/>
            <param name="expression.1" value="IsEnded"/>
            <param name="expression.2" value="true"/>
        </box>
        <box name="MarkerStarted" type="map">
            <input port="1" stream="out:FilterMarker_1"/>
            <output port="1" stream="out:MarkerStarted_1"/>
            <target-list>
                <item name="input" selection="none">
                    <include field="perfData"/>
                    <include field="IsEnded"/>
                    <include field="IsStarted"/>
                    <include field="MSGIdx"/>
                </item>
                <expressions>
                    <replace field="perfData.t2_time">to_milliseconds(now())</replace>
                </expressions>
            </target-list>
        </box>
        <box name="POST_OP" type="map">
            <input port="1" stream="out:FilterMarker_3"/>
            <output port="1" stream="out:POST_OP_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="deltaVol">if(RawParsed.chargingNow &gt; 0 &amp;&amp; RawParsed.SOC &gt;= 50) then calljava('com.autoever.poc.parser.ccp.CustomUtils', 'GetDeltaVol', RawParsed.cellData) else 0</include>
                    <include field="dVols">calljava('com.autoever.poc.parser.ccp.CustomUtils', 'GetDVol', RawParsed.cellData)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Split2" type="split">
            <input port="1" stream="out:FilterMarker_2"/>
            <output port="1" stream="out:Split2_1"/>
            <output port="2" stream="out:Split2_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="gen_seq_id" type="seqnum">
            <input port="1" stream="out:POST_OP_1"/>
            <output port="1" stream="out:gen_seq_id_1"/>
            <param name="output-field" value="seq_id"/>
            <param name="sequence-id" value="sequenceid"/>
            <param name="update-expression" value="sequenceid + 1"/>
        </box>
        <box name="MarkerEnded" type="map">
            <input port="1" stream="out:Split2_2"/>
            <output port="1" stream="out:MarkerEnded_1"/>
            <target-list>
                <item name="input" selection="none">
                    <include field="perfData"/>
                    <include field="IsEnded"/>
                    <include field="IsStarted"/>
                    <include field="MSGIdx"/>
                </item>
                <expressions>
                    <replace field="perfData.t3_time">to_milliseconds(now())</replace>
                </expressions>
            </target-list>
        </box>
        <box name="addSeqId" type="map">
            <input port="1" stream="out:gen_seq_id_1"/>
            <output port="1" stream="out:addSeqId_1"/>
            <target-list>
                <item name="input" selection="all">
                    <remove field="seq_id"/>
                </item>
                <expressions>
                    <replace field="messageID">messageID + '_' + seq_id</replace>
                </expressions>
            </target-list>
        </box>
        <box name="MarkerUnion" type="union">
            <input port="1" stream="out:MarkerStarted_1"/>
            <input port="2" stream="out:MarkerEnded_1"/>
            <output port="1" stream="out:MarkerUnion_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="AGGToHCP" type="aggregate">
            <input port="1" stream="out:MarkerUnion_1"/>
            <output port="1" stream="out:AGGToHCP_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="IsStarted"/>
            <param name="dimension-close-predicate.0" value="IsEnded"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="*">lastval(*)</include>
                    <replace field="perfData.t2_time">firstval(perfData.t2_time)</replace>
                    <replace field="perfData.t3_time">lastval(perfData.t3_time)</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Split" type="split">
            <input port="1" stream="out:addSeqId_1"/>
            <output port="1" stream="out:Split_1"/>
            <output port="2" stream="out:Split_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="EndedCCPProc" type="map">
            <input port="1" stream="out:AGGToHCP_1"/>
            <output port="1" stream="out:EndedCCPProc_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="perfData">input1.perfData</include>
                    <replace field="perfData.kafka_msg_id">input1.perfData.kafka_msg_id + "_CCP"</replace>
                    <replace field="perfData.data_count">MSGIdx-2</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Union2" type="union">
            <input port="1" stream="out:Split2_1"/>
            <input port="2" stream="out:Split_1"/>
            <output port="1" stream="out:Union2_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="AggRES" type="aggregate">
            <input port="1" stream="out:Union2_1"/>
            <output port="1" stream="out:AggRES_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="!isnull(RawParsed.IBM)"/>
            <param name="dimension-close-predicate.0" value="IsEnded || (lastval(RawHeader.DeltaTime) - firstval(RawHeader.DeltaTime)) &gt;= 1"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="*">lastval(*)</include>
                    <include field="DeltaCurrent">lastval(RawParsed.IBM)-firstval(RawParsed.IBM)</include>
                </expressions>
            </target-list>
        </box>
        <box name="FilterCopy" type="filter">
            <input port="1" stream="out:EndedCCPProc_1"/>
            <output port="1" stream="out:FilterCopy_1"/>
            <output port="2" stream="out:FilterCopy_2"/>
            <param name="autogen-nomatch-port" value="true"/>
            <param name="expression.0" value="false"/>
            <param name="expression.1" value="true"/>
        </box>
        <box name="Filter2" type="filter">
            <input port="1" stream="out:AggRES_1"/>
            <output port="1" stream="out:Filter2_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="!IsEnded"/>
        </box>
        <module-reference name="PublishPerf">
            <input name="InputStream" port="1" stream="out:FilterCopy_1"/>
            <output name="OutputStream" port="1" stream="out:PublishPerf_1"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <param name="file" value="com.autoever.poc.maineventflow.PerfFlow"/>
            <parameter-bindings>
                <binding name="LV_SERVER_URI" value="${LV_SERVER_URI}"/>
            </parameter-bindings>
        </module-reference>
        <box name="Gather" type="gather">
            <input port="1" stream="out:Filter2_1"/>
            <input port="2" stream="out:Split_2"/>
            <output port="1" stream="out:Gather_1"/>
            <target-list>
                <item name="input1" prefix="input1_" selection="none">
                    <include field="DeltaCurrent"/>
                </item>
                <item name="input2" selection="all"/>
                <expressions>
                    <include field="RawParsed.RES">if(!isnull(input1) &amp;&amp; !isnull(input1.DeltaCurrent)) then input1.DeltaCurrent else 0</include>
                </expressions>
            </target-list>
            <param name="key-field" value="messageID"/>
            <param name="output-last-time-field" value="false"/>
            <param name="emit-on-completion" value="true"/>
            <param name="replacement-type" value="keep_first"/>
            <param name="predicate" value="isnull(input1)"/>
        </box>
        <box name="unpack" type="map">
            <input port="1" stream="out:Gather_1"/>
            <output port="1" stream="out:unpack_1"/>
            <target-list>
                <item name="input" selection="all">
                    <remove field="kafkaMessage"/>
                    <remove field="perfData"/>
                    <remove field="dVols"/>
                    <remove field="RawHeader"/>
                    <remove field="RawParsed"/>
                    <remove field="IsEnded"/>
                    <remove field="IsStarted"/>
                    <remove field="MSGIdx"/>
                </item>
                <expressions>
                    <include field="terminalID">kafkaMessage.TerminalID</include>
                    <include field="vehicleKeyID">kafkaMessage.VehicleKeyID</include>
                    <include field="baseTime">kafkaMessage.BaseTime</include>
                    <include field="realTime">long(GetLocalTime(kafkaMessage.BaseTime + long(RawHeader.DeltaTime), ''))</include>
                    <include field="rootCount">kafkaMessage.RootCount</include>
                    <include field="*">RawParsed.*</include>
                    <replace field="cellData">calljava('com.autoever.poc.parser.ccp.CustomUtils', 'JoinFromCellTuples', RawParsed.cellData)</replace>
                    <replace field="msrTBData">calljava('com.autoever.poc.parser.ccp.CustomUtils', 'JoinFromCellTuples', RawParsed.msrTBData)</replace>
                    <include field="dVol">calljava('com.autoever.poc.parser.ccp.CustomUtils', 'JoinFromNumberList', dVols)</include>
                    <replace field="SOC">round(RawParsed.SOC * 1.0)/10.0</replace>
                    <replace field="IBM">round(RawParsed.IBM * 1.0)/10.0</replace>
                    <replace field="ISOL">round(RawParsed.ISOL * 1.0)/10.0</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Filter" type="filter">
            <input port="1" stream="out:unpack_1"/>
            <output port="1" stream="out:Filter_1"/>
            <output port="2" stream="out:Filter_2"/>
            <param name="autogen-nomatch-port" value="true"/>
            <param name="expression.0" value="false"/>
            <param name="expression.1" value="true"/>
        </box>
        <box name="PublishCCP" type="outputadapter">
            <input port="1" stream="out:Filter_1"/>
            <output port="1" stream="out:PublishCCP_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.liveview.LiveViewPublish"/>
            <param name="ackPeriod" value="0"/>
            <param name="adHoc" value="false"/>
            <param name="bufferSize" value="1024"/>
            <param name="connectInline" value="false"/>
            <param name="connectionKey" value=""/>
            <param name="deleteField" value=""/>
            <param name="dynamicTableName" value="false"/>
            <param name="enableCompressedConnection" value="false"/>
            <param name="encapsulatingLV" value="false"/>
            <param name="flushInterval" value="250"/>
            <param name="logLevel" value="INFO"/>
            <param name="lvTableName" value="AutoCCPDataTable"/>
            <param name="pubName" value=""/>
            <param name="reliablePub" value="false"/>
            <param name="seqField" value=""/>
            <param name="shareConnection" value="true"/>
            <param name="strictSchema" value="false"/>
            <param name="throughPort" value="false"/>
            <param name="uri" value="${LV_SERVER_URI}"/>
            <param name="useRuntimeURI" value="false"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:PublishPerf_1"/>
            <input port="2" stream="out:PublishCCP_1"/>
            <input port="3" stream="out:Filter_2"/>
            <input port="4" stream="out:FilterCopy_2"/>
            <output port="1" stream="ccpOutputStream"/>
            <param name="strict" value="false"/>
        </box>
        <output-stream name="ccpOutputStream"/>
    </add>
</modify>
