<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="interface"/>
            <param name="fully-qualified-name" value="com.autoever.poc.parser.CANParser.sbapp"/>
        </type-metadata>
        <memory-model-settings/>
        <implements module-reference="com.autoever.poc.maineventflow.LiveViewTable"/>
        <implements module-reference="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <import alias="MainOutputSchema" from="com.autoever.poc.maineventflow.AutoVDMSFlow_v2" item="MainOutputSchema"/>
        <import from="com.autoever.poc.maineventflow.LiveViewTable"/>
        <import from="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <named-schemas>
            <schema name="ControlCANSchema">
                <field name="command" type="string"/>
                <field name="policyFolder" type="string"/>
            </schema>
        </named-schemas>
        <parameter-definitions>
            <parameter default="D:/projects/vdms_env/Scripts/python.exe" name="PYTHON_EXECUTABLE"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
        </parameter-definitions>
        <dynamic-variables/>
        <stream name="controlInstance">
            <schema>
                <field name="command" type="string"/>
            </schema>
        </stream>
        <stream name="InputStream" schema="MainOutputSchema"/>
        <stream name="LoadPolicy" schema="ControlCANSchema"/>
        <box name="Initialize" type="inputadapter">
            <output port="1" stream="out:Initialize_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="InitModule" type="java">
            <input port="1" stream="out:Initialize_1"/>
            <output port="1" stream="InitOut3"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="false"/>
            <param name="GlobalInstanceId" value=""/>
            <param name="InstanceType" value="Local"/>
            <param name="LocalInstanceId" value="python_can_instance"/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema/&gt;&#13;&#10;"/>
            <param name="Script" value=""/>
            <param name="ScriptFile" value="can_main_parser.py"/>
            <param name="ScriptSource" value="File"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <box name="Map" type="map">
            <input port="1" stream="LoadPolicy"/>
            <output port="1" stream="out:Map_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="inputVars.*">input1.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="PackForCan" type="map">
            <input port="1" stream="InputStream"/>
            <output port="1" stream="out:PackForCan_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="inputVars.*">*</include>
                    <include field="inputVars.policyList">list(kafkaMessage.TerminalID)</include>
                </expressions>
            </target-list>
        </box>
        <box name="python_can_instance" type="java">
            <input port="1" stream="controlInstance"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonInstanceAdapter"/>
            <param name="CaptureOutput" value="false"/>
            <param name="EnableControlPort" value="true"/>
            <param name="Executable" value="${PYTHON_EXECUTABLE}"/>
            <param name="GlobalInstanceId" value=""/>
            <param name="InstanceType" value="Local"/>
            <param name="LogLevel" value="INFO"/>
            <param name="UseTempFile" value="false"/>
            <param name="WorkingDir" value="."/>
        </box>
        <output-stream name="InitOut3"/>
        <box name="CanParser" type="java">
            <input port="1" stream="out:PackForCan_1"/>
            <output port="1" stream="out:CanParser_1"/>
            <error stream="CanError"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="true"/>
            <param name="GlobalInstanceId" value=""/>
            <param name="InstanceType" value="Local"/>
            <param name="LocalInstanceId" value="python_can_instance"/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;can_data&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;kafkaMessage&quot; type=&quot;tuple&quot; value=&quot;KafkaVDMSDataSchema&quot;/&gt;&#13;&#10;    &lt;field name=&quot;perfData&quot; type=&quot;tuple&quot; value=&quot;PerfDataSchema&quot;/&gt;&#13;&#10;    &lt;field name=&quot;messageID&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;mgmtNO&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="Script" value="import sys, os&#13;&#10;import numpy as np&#13;&#10;import pandas as pd&#13;&#10;import json&#13;&#10;&#13;&#10;KAFKA_MSG = kafkaMessage&#13;&#10;CAN_FILE_PATH = filePath&#13;&#10;BIN_DATA = binaryData&#13;&#10;APPLY_POLICES = policyList&#13;&#10;can_data = None&#13;&#10;&#13;&#10;vdmsRAW = VDMSRAW(CAN_FILE_PATH, BIN_DATA, KAFKA_MSG)&#13;&#10;mainclass = triggeringThread()&#13;&#10;for policy in APPLY_POLICES:&#13;&#10;    vdmsRAW.rewind()&#13;&#10;    try:&#13;&#10;        if POLICY_DATAS:&#13;&#10;            mainclass.Main(vdmsRAW, POLICY_DATAS[policy])&#13;&#10;    except KeyError:&#13;&#10;        pass&#13;&#10;&#13;&#10;vdmsRAW.close()&#13;&#10;&#13;&#10;#if CAN_FILE_PATH:&#13;&#10;#    os.remove(CAN_FILE_PATH)&#13;&#10;    &#13;&#10;data_np = np.array(mainclass.trigMergeList, dtype=object)&#13;&#10;data_df = pd.DataFrame(data_np)&#13;&#10;if not data_df.empty:&#13;&#10;    # data_t = [[206.29665, 326.29665, 266.29665, 'LDC_AuxBattWrnLmpReq', 0, 'LDC', 'OnFalse']]&#13;&#10;    data_df.columns = ['preTime', 'postTime', 'deltaTime', 'eventName', 'value', 'category', 'status']&#13;&#10;    can_data = f'{{&quot;can_data&quot;: {data_df.to_json(orient=&quot;records&quot;)}}}'&#13;&#10;"/>
            <param name="ScriptFile" value="can_parser.py"/>
            <param name="ScriptSource" value="Script text"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <box name="InitPolicy" type="java">
            <input port="1" stream="out:Map_1"/>
            <output port="1" stream="out:InitPolicy_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="false"/>
            <param name="GlobalInstanceId" value=""/>
            <param name="InstanceType" value="Local"/>
            <param name="LocalInstanceId" value="python_can_instance"/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;command&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;policyFolder&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;updated_policies&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="Script" value=""/>
            <param name="ScriptFile" value="can_policy_parser.py"/>
            <param name="ScriptSource" value="File"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <output-stream name="CanError"/>
        <box name="UnMapOutput" type="map">
            <input port="1" stream="out:InitPolicy_1"/>
            <output port="1" stream="LoadPolicyOut"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">outputVars.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="UnpackCan" type="map">
            <input port="1" stream="out:CanParser_1"/>
            <output port="1" stream="out:UnpackCan_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">outputVars.*</include>
                    <replace field="perfData.t2_time">to_milliseconds(now())</replace>
                </expressions>
            </target-list>
        </box>
        <output-stream name="LoadPolicyOut"/>
        <box name="CanDataTuple" type="java">
            <input port="1" stream="out:UnpackCan_1"/>
            <output port="1" stream="out:CanDataTuple_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.operator.jsontuple.JSON2Tuple"/>
            <param name="enableLooseParsing" value="true"/>
            <param name="enablePassThroughFields" value="true"/>
            <param name="enableStatusPort" value="false"/>
            <param name="jsonFieldName" value="can_data"/>
            <param name="logLevel" value="INFO"/>
            <param name="outputSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;can_data&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;tuple&quot; value=&quot;CanDataTableSchema&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="passThroughFieldsFieldName" value="PassThroughFields"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
        </box>
        <box name="Split7" type="split">
            <input port="1" stream="out:CanDataTuple_1"/>
            <output port="1" stream="out:Split7_1"/>
            <output port="2" stream="out:Split7_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="EndedCanProc" type="map">
            <input port="1" stream="out:Split7_2"/>
            <output port="1" stream="out:EndedCanProc_1"/>
            <target-list>
                <item name="input" selection="none">
                    <declare field="t1_time">input1.PassThroughFields.perfData.t1_time-input1.PassThroughFields.perfData.start_time</declare>
                    <declare field="t2_time">input1.PassThroughFields.perfData.t2_time-input1.PassThroughFields.perfData.start_time</declare>
                    <declare field="end_time">to_milliseconds(now())-input1.PassThroughFields.perfData.start_time</declare>
                </item>
                <expressions>
                    <include field="perfData">input1.PassThroughFields.perfData</include>
                    <replace field="perfData.kafka_msg_id">input1.PassThroughFields.perfData.kafka_msg_id + "_CAN"</replace>
                    <replace field="perfData.data_count">if isnull(input1.can_data) then 0 else length(input1.can_data)</replace>
                    <replace field="perfData.t1_time">t1_time</replace>
                    <replace field="perfData.t2_time">t2_time-t1_time</replace>
                    <replace field="perfData.end_time">end_time</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Filter" type="filter">
            <input port="1" stream="out:Split7_1"/>
            <output port="1" stream="out:Filter_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="!isnull(input1.can_data)"/>
        </box>
        <box name="MapToPerfData" type="map">
            <input port="1" stream="out:EndedCanProc_1"/>
            <output port="1" stream="out:MapToPerfData_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">input1.perfData.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="Split2" type="split">
            <input port="1" stream="out:Filter_1"/>
            <output port="1" stream="out:Split2_1"/>
            <output port="2" stream="out:Split2_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="IterateCanData" type="iterate">
            <input port="1" stream="out:Split2_2"/>
            <output port="1" stream="out:IterateCanData_1"/>
            <param name="iterate-expr" value="can_data"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">each.element.*</include>
                    <replace field="messageID">PassThroughFields.messageID</replace>
                    <replace field="terminalID">PassThroughFields.kafkaMessage.TerminalID</replace>
                    <replace field="vehicleKeyID">PassThroughFields.kafkaMessage.VehicleKeyID</replace>
                    <replace field="rootCount">PassThroughFields.kafkaMessage.RootCount</replace>
                    <replace field="baseTime">PassThroughFields.kafkaMessage.BaseTime</replace>
                    <replace field="realTime">long(GetLocalTime(PassThroughFields.kafkaMessage.BaseTime + long(each.element.deltaTime), ''))</replace>
                    <replace field="mgmtNO">PassThroughFields.mgmtNO</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Map2" type="map">
            <input port="1" stream="out:Split2_1"/>
            <output port="1" stream="out:Map2_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="can_count">length(can_data)</include>
                </expressions>
            </target-list>
        </box>
        <box name="PublishPerf" type="outputadapter">
            <input port="1" stream="out:MapToPerfData_1"/>
            <output port="1" stream="out:PublishPerf_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.liveview.LiveViewPublish"/>
            <param name="ackPeriod" value="0"/>
            <param name="adHoc" value="false"/>
            <param name="bufferSize" value="100"/>
            <param name="connectInline" value="false"/>
            <param name="connectionKey" value=""/>
            <param name="deleteField" value=""/>
            <param name="dynamicTableName" value="false"/>
            <param name="enableCompressedConnection" value="false"/>
            <param name="encapsulatingLV" value="false"/>
            <param name="flushInterval" value="25"/>
            <param name="logLevel" value="INFO"/>
            <param name="lvTableName" value="PerfDataTable"/>
            <param name="pubName" value=""/>
            <param name="reliablePub" value="false"/>
            <param name="seqField" value=""/>
            <param name="shareConnection" value="true"/>
            <param name="strictSchema" value="false"/>
            <param name="throughPort" value="false"/>
            <param name="uri" value="${LV_SERVER_URI}"/>
            <param name="useRuntimeURI" value="false"/>
        </box>
        <box name="Sequence4" type="seqnum">
            <input port="1" stream="out:IterateCanData_1"/>
            <output port="1" stream="out:Sequence4_1"/>
            <param name="output-field" value="sequence4_id"/>
            <param name="sequence-id" value="sequence4id"/>
            <param name="update-expression" value="sequence4id + 1"/>
        </box>
        <box name="MapToCanTable" type="map">
            <input port="1" stream="out:Sequence4_1"/>
            <output port="1" stream="out:MapToCanTable_1"/>
            <target-list>
                <item name="input" selection="none">
                    <include field="baseTime"/>
                    <include field="category"/>
                    <include field="deltaTime"/>
                    <include field="eventName"/>
                    <include field="messageID"/>
                    <include field="postTime"/>
                    <include field="preTime"/>
                    <include field="realTime"/>
                    <include field="rootCount"/>
                    <include field="status"/>
                    <include field="terminalID"/>
                    <include field="value"/>
                    <include field="vehicleKeyID"/>
                    <include field="mgmtNO"/>
                </item>
                <expressions>
                    <replace field="messageID">input1.messageID + '_' + string(sequence4_id)</replace>
                </expressions>
            </target-list>
        </box>
        <box name="OutputAdapter" type="outputadapter">
            <input port="1" stream="out:MapToCanTable_1"/>
            <output port="1" stream="out:OutputAdapter_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.liveview.LiveViewPublish"/>
            <param name="ackPeriod" value="0"/>
            <param name="adHoc" value="false"/>
            <param name="bufferSize" value="1024"/>
            <param name="connectInline" value="false"/>
            <param name="connectionKey" value=""/>
            <param name="deleteField" value=""/>
            <param name="dynamicTableName" value="false"/>
            <param name="enableCompressedConnection" value="false"/>
            <param name="encapsulatingLV" value="false"/>
            <param name="flushInterval" value="25"/>
            <param name="logLevel" value="INFO"/>
            <param name="lvTableName" value="AutoCanDataTable"/>
            <param name="pubName" value=""/>
            <param name="reliablePub" value="false"/>
            <param name="seqField" value=""/>
            <param name="shareConnection" value="true"/>
            <param name="strictSchema" value="false"/>
            <param name="throughPort" value="false"/>
            <param name="uri" value="${LV_SERVER_URI}"/>
            <param name="useRuntimeURI" value="false"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:OutputAdapter_1"/>
            <input port="2" stream="out:PublishPerf_1"/>
            <input port="3" stream="out:Map2_1"/>
            <output port="1" stream="PublishCanOutput"/>
            <param name="strict" value="false"/>
        </box>
        <output-stream name="PublishCanOutput"/>
    </add>
</modify>
