<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.parser.CCPParser_v2"/>
        </type-metadata>
        <memory-model-settings/>
        <import alias="MainOutputSchema" from="com.autoever.poc.maineventflow.AutoVDMSFlow_v2" item="MainOutputSchema"/>
        <import from="com.autoever.poc.maineventflow.BaseRawData"/>
        <import from="com.autoever.poc.maineventflow.LiveViewTable"/>
        <import from="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <named-schemas>
            <schema name="FieldType">
                <field name="fieldName" type="string"/>
                <field name="fieldValue" type="double"/>
            </schema>
        </named-schemas>
        <parameter-definitions>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
        </parameter-definitions>
        <dynamic-variables>
            <dynamic-variable initial-expression="0.0" name="thresholdValue" setter-expression="newThresholdValue" setter-stream="ControlStream"/>
        </dynamic-variables>
        <stream name="ControlStream">
            <schema>
                <field name="command" type="string"/>
                <field name="newThresholdValue" type="double"/>
                <field name="evtFolder" type="string"/>
            </schema>
        </stream>
        <stream name="InputStream" schema="MainOutputSchema"/>
        <box name="VDMSRawCCP" type="java">
            <input port="1" stream="InputStream"/>
            <output port="1" stream="out:VDMSRawCCP_1"/>
            <output port="2" stream="StatusOutput"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.autoever.poc.adapters.VdmsRawParser"/>
            <param name="parserType" value="ccp"/>
        </box>
        <output-stream name="StatusOutput"/>
        <box name="Organize" type="map">
            <input port="1" stream="out:VDMSRawCCP_1"/>
            <output port="1" stream="out:Organize_1"/>
            <target-list>
                <item name="input" selection="all">
                    <remove field="PassThroughs"/>
                </item>
                <expressions>
                    <include field="*">PassThroughs.*</include>
                    <remove field="filePath"/>
                    <remove field="binaryData"/>
                </expressions>
            </target-list>
        </box>
        <box name="FilterCCP" type="filter">
            <input port="1" stream="out:Organize_1"/>
            <output port="1" stream="out:FilterCCP_1"/>
            <output port="2" stream="out:FilterCCP_2"/>
            <output port="3" stream="out:FilterCCP_3"/>
            <output port="4" stream="out:FilterCCP_4"/>
            <output port="5" stream="out:FilterCCP_5"/>
            <output port="6" stream="out:FilterCCP_6"/>
            <output port="7" stream="out:FilterCCP_7"/>
            <output port="8" stream="out:FilterCCP_8"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="IsStarted"/>
            <param name="expression.1" value="IsEnded"/>
            <param name="expression.2" value="contains(ODTField, 'cell_')"/>
            <param name="expression.3" value="contains(ODTField, 'msr_tb_')"/>
            <param name="expression.4" value="ODTField == 'SOC'"/>
            <param name="expression.5" value="ODTField == 'msr_data.ibm'"/>
            <param name="expression.6" value="ODTField == 'chg_charging_now'"/>
            <param name="expression.7" value="ODTField == 'msr_data.isol'"/>
        </box>
        <box name="MAP_CHG" type="map">
            <input port="1" stream="out:FilterCCP_7"/>
            <output port="1" stream="out:MAP_CHG_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="messageID">messageID</include>
                    <include field="chg_charging_now">ODTValue</include>
                </expressions>
            </target-list>
        </box>
        <box name="MAP_ISOL" type="map">
            <input port="1" stream="out:FilterCCP_8"/>
            <output port="1" stream="out:MAP_ISOL_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="messageID">messageID</include>
                    <include field="isol">ODTValue</include>
                </expressions>
            </target-list>
        </box>
        <box name="MAP_MSR_IBM" type="map">
            <input port="1" stream="out:FilterCCP_6"/>
            <output port="1" stream="out:MAP_MSR_IBM_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="IBM">ODTValue * 0.1</include>
                    <include field="messageID">messageID</include>
                </expressions>
            </target-list>
        </box>
        <box name="MAP_SOC" type="map">
            <input port="1" stream="out:FilterCCP_5"/>
            <output port="1" stream="out:MAP_SOC_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="SOC">ODTValue * 0.1</include>
                    <include field="messageID">messageID</include>
                </expressions>
            </target-list>
        </box>
        <box name="Union3" type="union">
            <input port="1" stream="out:FilterCCP_1"/>
            <input port="2" stream="out:FilterCCP_2"/>
            <output port="1" stream="out:Union3_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="Split2" type="split">
            <input port="1" stream="out:Union3_1"/>
            <output port="1" stream="out:Split2_1"/>
            <output port="2" stream="out:Split2_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:Split2_1"/>
            <input port="2" stream="out:FilterCCP_3"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="Union4" type="union">
            <input port="1" stream="out:Split2_2"/>
            <input port="2" stream="out:FilterCCP_4"/>
            <output port="1" stream="out:Union4_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="AGG_CELL" type="aggregate">
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="out:AGG_CELL_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="IsStarted"/>
            <param name="dimension-close-predicate.0" value="IsEnded"/>
            <param name="dimension-emit-predicate.0" value="count(ODTField)==90"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="cellData">join(',', sort(filterlist(aggregatelist(FieldType(ODTField, ODTValue)), function(t FieldType){ !isempty(t.fieldName)}), function(t1 FieldType, t2 FieldType) {if(t1.fieldName &gt; t2.fieldName) then 1 else if(t1.fieldName &lt; t2.fieldName) then -1 else 0}))</include>
                    <include field="diffVal">max(ODTValue) - min(ODTValue)</include>
                    <include field="meanVal">avg(ODTValue)</include>
                    <include field="messageID">firstval(messageID)</include>
                    <include field="kafkaMessage">lastval(kafkaMessage)</include>
                    <include field="perfData">lastval(perfData)</include>
                    <include field="mgmtNO">lastval(mgmtNO)</include>
                    <include field="deltaTime">firstnonnullval(DeltaTime)</include>
                </expressions>
            </target-list>
        </box>
        <box name="AGG_MSR" type="aggregate">
            <input port="1" stream="out:Union4_1"/>
            <output port="1" stream="out:AGG_MSR_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="IsStarted"/>
            <param name="dimension-close-predicate.0" value="IsEnded"/>
            <param name="dimension-emit-predicate.0" value="count(ODTField)==9"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="msrTBData">join(',', sort(filterlist(aggregatelist(FieldType(ODTField, ODTValue*0.1)), function(t FieldType){ !isempty(t.fieldName)}), function(t1 FieldType, t2 FieldType) {if(t1.fieldName &gt; t2.fieldName) then 1 else if(t1.fieldName &lt; t2.fieldName) then -1 else 0}))</include>
                    <include field="messageID">firstval(messageID)</include>
                </expressions>
            </target-list>
        </box>
        <box name="Gather" type="gather">
            <input port="1" stream="out:AGG_CELL_1"/>
            <input port="2" stream="out:AGG_MSR_1"/>
            <input port="3" stream="out:MAP_SOC_1"/>
            <input port="4" stream="out:MAP_MSR_IBM_1"/>
            <input port="5" stream="out:MAP_CHG_1"/>
            <input port="6" stream="out:MAP_ISOL_1"/>
            <output port="1" stream="out:Gather_1"/>
            <target-list>
                <item name="input1" selection="all"/>
                <item name="input2" selection="none">
                    <include field="msrTBData"/>
                </item>
                <item name="input3" selection="none">
                    <include field="SOC"/>
                </item>
                <item name="input4" selection="none">
                    <include field="IBM"/>
                </item>
                <item name="input5" selection="none">
                    <include field="chg_charging_now"/>
                </item>
                <item name="input6" selection="none">
                    <declare field="isol">isol</declare>
                </item>
            </target-list>
            <param name="key-field" value="messageID"/>
            <param name="output-last-time-field" value="false"/>
            <param name="emit-on-completion" value="true"/>
            <param name="replacement-type" value="keep_first"/>
        </box>
        <box name="add_seq_id" type="seqnum">
            <input port="1" stream="out:Gather_1"/>
            <output port="1" stream="out:add_seq_id_1"/>
            <param name="output-field" value="seq_id"/>
            <param name="sequence-id" value="sequenceid"/>
            <param name="update-expression" value="sequenceid + 1"/>
        </box>
        <box name="unpack" type="map">
            <input port="1" stream="out:add_seq_id_1"/>
            <output port="1" stream="out:unpack_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="terminalID">kafkaMessage.TerminalID</include>
                    <include field="vehicleKeyID">kafkaMessage.VehicleKeyID</include>
                    <include field="baseTime">kafkaMessage.BaseTime</include>
                    <include field="realTime">long(GetLocalTime(kafkaMessage.BaseTime + long(deltaTime), ''))</include>
                    <include field="rootCount">kafkaMessage.RootCount</include>
                    <replace field="messageID">messageID + '_' + seq_id</replace>
                </expressions>
            </target-list>
        </box>
        <box name="MAP_PUB" type="map">
            <input port="1" stream="out:unpack_1"/>
            <output port="1" stream="out:MAP_PUB_1"/>
            <target-list>
                <item name="input" selection="all">
                    <remove field="kafkaMessage"/>
                    <remove field="perfData"/>
                    <remove field="seq_id"/>
                </item>
            </target-list>
        </box>
        <box name="PublishCCP" type="outputadapter">
            <input port="1" stream="out:MAP_PUB_1"/>
            <output port="1" stream="ccpOutputStream"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.liveview.LiveViewPublish"/>
            <param name="ackPeriod" value="0"/>
            <param name="adHoc" value="false"/>
            <param name="bufferSize" value="1024"/>
            <param name="connectInline" value="false"/>
            <param name="connectionKey" value=""/>
            <param name="deleteField" value=""/>
            <param name="dynamicTableName" value="false"/>
            <param name="enableCompressedConnection" value="false"/>
            <param name="encapsulatingLV" value="false"/>
            <param name="flushInterval" value="250"/>
            <param name="logLevel" value="INFO"/>
            <param name="lvTableName" value="AutoCCPDataTable"/>
            <param name="pubName" value=""/>
            <param name="reliablePub" value="false"/>
            <param name="seqField" value=""/>
            <param name="shareConnection" value="true"/>
            <param name="strictSchema" value="false"/>
            <param name="throughPort" value="false"/>
            <param name="uri" value="${LV_SERVER_URI}"/>
            <param name="useRuntimeURI" value="false"/>
        </box>
        <output-stream name="ccpOutputStream"/>
    </add>
</modify>
