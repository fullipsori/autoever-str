<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.maineventflow.CANDBCFlow"/>
        </type-metadata>
        <memory-model-settings/>
        <import alias="MainOutputSchema" from="com.autoever.poc.maineventflow.AutoVDMSFlow_v2" item="MainOutputSchema"/>
        <import alias="DBCDataSchema" from="com.autoever.poc.parser.CANDBCParser" item="DBCDataSchema"/>
        <import alias="DBCTableSchema" from="com.autoever.poc.parser.CANDBCParser" item="DBCTableSchema"/>
        <parameter-definitions>
            <parameter default="d:/Projects/vdms/tools/Python/Python311/python.exe" name="PYTHON_EXECUTABLE"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
        </parameter-definitions>
        <dynamic-variables/>
        <data name="DBCTable" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="transactional_memory"/>
            <param name="replicated" value="false"/>
            <param name="table-schema" value="DBCTableSchema"/>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
            <table-partitioning>
                <param name="data-distribution-policy-name" value="vdms-dynamic-data-distribution-policy"/>
                <param name="data-mapper-type" value="round-robin"/>
            </table-partitioning>
        </data>
        <data name="LastestValueTable" shared="true" source="concrete" type="querytable">
            <param name="storage-method" value="transactional_memory"/>
            <param name="replicated" value="false"/>
            <table-schema>
                <schema>
                    <field name="vehicleKeyID" type="long"/>
                    <field name="rootCount" type="long"/>
                    <field name="fieldInfo" type="list">
                        <element-type type="tuple">
                            <schema>
                                <field name="fieldName" type="string"/>
                                <field name="fieldValue" type="string"/>
                            </schema>
                        </element-type>
                    </field>
                </schema>
                <primary-index type="btree">
                    <field name="vehicleKeyID"/>
                </primary-index>
                <index type="btree">
                    <field name="vehicleKeyID"/>
                    <field name="rootCount"/>
                </index>
            </table-schema>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
            <table-partitioning>
                <param name="data-distribution-policy-name" value="vdms-dynamic-data-distribution-policy"/>
                <param name="data-mapper-type" value="round-robin"/>
            </table-partitioning>
        </data>
        <stream name="InputStream" schema="MainOutputSchema"/>
        <box name="Initialize" type="inputadapter">
            <output port="1" stream="out:Initialize_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="AddSignals" type="map">
            <input port="1" stream="out:Initialize_1"/>
            <output port="1" stream="out:AddSignals_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="DBCFiles">GetFilenameListInPath("${RESOURCE_ROOT}/dbc", 'dbc')</include>
                    <include field="signals">['CF_Clu_Odometer', 'CF_Vcu_GarSelDisp', 'CR_Mcu_VehSpdDec_Kph', 'CR_Mcu_VehSpd_Kph', 'CF_OBC_DCChargingStat', 'CF_Bms_ChgSts']</include>
                </expressions>
            </target-list>
        </box>
        <module-reference name="CANDBCParser">
            <input dispatch="numerical" key="int(kafkaMessage.VehicleKeyID)" name="InputStream" port="1" stream="InputStream"/>
            <output name="OutputParserStream" port="1" stream="OutputParserStream"/>
            <output name="UpdateSignalVariable" port="2" stream="OutputVarStream"/>
            <output name="OutputRawDataStream" port="3" stream="OutputRawDataStream"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="5"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="5" type="concrete"/>
            <param name="file" value="com.autoever.poc.parser.CANDBCParser"/>
            <input-dataref name="DBCTable" table="DBCTable"/>
            <input-dataref name="LastestValueTable" table="LastestValueTable"/>
            <parameter-bindings>
                <binding name="LV_SERVER_URI" value="${LV_SERVER_URI}"/>
                <binding name="RESOURCE_ROOT" value="${RESOURCE_ROOT}"/>
            </parameter-bindings>
        </module-reference>
        <output-stream name="OutputParserStream"/>
        <output-stream name="OutputRawDataStream"/>
        <output-stream name="OutputVarStream"/>
        <box name="Iterate2" type="iterate">
            <input port="1" stream="out:AddSignals_1"/>
            <output port="1" stream="out:Iterate2_1"/>
            <param name="iterate-expr" value="DBCFiles"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="vehicleKeyID">long(each.element)</include>
                </expressions>
            </target-list>
        </box>
        <box name="DeletePrev" type="query">
            <input port="1" stream="out:Iterate2_1"/>
            <output port="1" stream="out:DeletePrev_1"/>
            <dataref id="querytable" name="DBCTable"/>
            <param name="operation" value="delete"/>
            <param name="where" value="secondary-key"/>
            <param name="key-field.0" value="vehicleKeyID"/>
            <param name="key-lowerbound-value.0" value="input1.vehicleKeyID"/>
            <param name="key-lowerbound-operation.0" value="eq"/>
            <param name="key-upperbound-operation.0" value="none"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="all"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list goal-schema="DBCDataSchema" name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="DBCDataSchema" name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="DBCDataSchema" name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="pack" type="map">
            <input port="1" stream="out:DeletePrev_1"/>
            <output port="1" stream="out:pack_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="inputVars.*">*</include>
                </expressions>
            </target-list>
        </box>
        <box name="LoadDBCData" type="java">
            <input port="1" stream="out:pack_1"/>
            <output port="1" stream="out:LoadDBCData_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="true"/>
            <param name="GlobalInstanceId" value="python_can_instance"/>
            <param name="InstanceType" value="Global"/>
            <param name="LocalInstanceId" value=""/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;dbc_json&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="Script" value=""/>
            <param name="ScriptFile" value="can_dbc_list.py"/>
            <param name="ScriptSource" value="File"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <box name="Unpack" type="map">
            <input port="1" stream="out:LoadDBCData_1"/>
            <output port="1" stream="out:Unpack_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">outputVars.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="jsonToTuple" type="java">
            <input port="1" stream="out:Unpack_1"/>
            <output port="1" stream="out:jsonToTuple_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.operator.jsontuple.JSON2Tuple"/>
            <param name="enableLooseParsing" value="true"/>
            <param name="enablePassThroughFields" value="false"/>
            <param name="enableStatusPort" value="false"/>
            <param name="jsonFieldName" value="dbc_json"/>
            <param name="logLevel" value="INFO"/>
            <param name="outputSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;dbcList&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;tuple&quot; value=&quot;DBCDataSchema&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="passThroughFieldsFieldName" value="PassThroughFields"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
        </box>
        <box name="Iterate" type="iterate">
            <input port="1" stream="out:jsonToTuple_1"/>
            <output port="1" stream="out:Iterate_1"/>
            <param name="iterate-expr" value="dbcList"/>
            <param name="iterate-cond" value="!isempty(dbcList)"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">each.element.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="InsertDBC" type="query">
            <input port="1" stream="out:Iterate_1"/>
            <output port="1" stream="OutputDBCStream"/>
            <dataref id="querytable" name="DBCTable"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="vehicleKeyID"/>
            <param name="key-value.0" value="input1.vehicleKeyID"/>
            <param name="key-field.1" value="sig_name"/>
            <param name="key-value.1" value="input1.sig_name"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="force"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="all"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="DBCDataSchema" name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="DBCDataSchema" name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <output-stream name="OutputDBCStream"/>
    </add>
</modify>
