<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.maineventflow.CANFlow"/>
        </type-metadata>
        <memory-model-settings/>
        <implements module-reference="com.autoever.poc.maineventflow.LiveViewTable"/>
        <implements module-reference="com.autoever.poc.maineventflow.kafkaSchemas"/>
        <import alias="MainOutputSchema" from="com.autoever.poc.maineventflow.AutoVDMSFlow_v2" item="MainOutputSchema"/>
        <import from="com.autoever.poc.maineventflow.LiveViewTable"/>
        <import alias="ControlCANSchema" from="com.autoever.poc.parser.CANParser" item="ControlCANSchema"/>
        <parameter-definitions>
            <parameter default="D:/projects/vdms_env/Scripts/python.exe" name="PYTHON_EXECUTABLE"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
        </parameter-definitions>
        <dynamic-variables/>
        <stream name="InputStream" schema="MainOutputSchema"/>
        <stream name="LoadPolicyStream" schema="ControlCANSchema"/>
        <box name="Initialize" type="inputadapter">
            <output port="1" stream="out:Initialize_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="LoadPolicy" type="map">
            <input port="1" stream="out:Initialize_1"/>
            <output port="1" stream="out:LoadPolicy_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="command">'Load'</include>
                    <include field="policyFolder">"${RESOURCE_ROOT}/policy"</include>
                </expressions>
            </target-list>
        </box>
        <box name="ReloadPolicy" type="map">
            <input port="1" stream="LoadPolicyStream"/>
            <output port="1" stream="out:ReloadPolicy_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <replace field="command">coalesce(command, 'Reload')</replace>
                </expressions>
            </target-list>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:ReloadPolicy_1"/>
            <input port="2" stream="out:LoadPolicy_1"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="PolicyInputLog" type="outputadapter">
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="out:PolicyInputLog_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Info"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value=""/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Use EventFlow Name"/>
            <param name="messagePrefix" value=""/>
            <param name="moduleQualifiedEventFlowName" value="false"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="false"/>
        </box>
        <module-reference name="CANParserModule">
            <input dispatch="broadcast" name="LoadPolicy" port="1" stream="out:PolicyInputLog_1"/>
            <input dispatch="round_robin" name="InputStream" port="2" stream="InputStream"/>
            <output name="LoadPolicyOut" port="1" stream="out:CANParserModule_1"/>
            <output name="PublishCanOutput" port="2" stream="out:CANParserModule_2"/>
            <output name="CanError" port="3" stream="ErrorOutputStream"/>
            <param name="parallel" value="true"/>
            <param name="parallel-region-queue-max-outstanding-tuples" value="2"/>
            <param name="parallel-region-queue-wait-strategy" value="BLOCKING"/>
            <multiplicity number="2" type="concrete"/>
            <param name="file" value="com.autoever.poc.parser.CANParser"/>
            <parameter-bindings>
                <binding name="PYTHON_EXECUTABLE" value="${PYTHON_EXECUTABLE}"/>
                <binding name="RESOURCE_ROOT" value="${RESOURCE_ROOT}"/>
                <binding name="LV_SERVER_URI" value="${LV_SERVER_URI}"/>
            </parameter-bindings>
        </module-reference>
        <output-stream name="ErrorOutputStream"/>
        <box name="Union2" type="union">
            <input port="1" stream="out:CANParserModule_2"/>
            <output port="1" stream="ParserOutputStream"/>
            <param name="strict" value="false"/>
        </box>
        <box name="Union3" type="union">
            <input port="1" stream="out:CANParserModule_1"/>
            <output port="1" stream="PolicyOutputStream"/>
            <param name="strict" value="false"/>
        </box>
        <output-stream name="ParserOutputStream"/>
        <output-stream name="PolicyOutputStream"/>
    </add>
</modify>
